name: Rust
on: [ push, pull_request ]
jobs:
  lint:
    name: Format and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - uses: actions-rs/cargo@v1
        name: Format Check
        with:
          command: fmt
          args: -- --check

  test:
    name: Tests
    strategy:
      matrix:
        build-type: [Release]
        os:
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true

      - name: Show conda installation info
        run: conda info

      - name: Install pthreads
        if: matrix.os == 'windows-latest'
        run: mamba install pthreads-win32

      - name: Configure cmake (WINDOWS)
        if: matrix.os == 'windows-latest'
        working-directory: ${{ github.workspace }}/build
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" x86
          cmake .. `
            -DCMAKE_INSTALL_PREFIX:PATH=$env:CONDA_PREFIX `
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} `
            -DPKG_CONFIG_EXECUTABLE:FILEPATH=$env:CONDA_PREFIX/Library/bin/pkg-config.exe

      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: cmake --build . --target install --config ${{ matrix.build-type }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        run: cargo build -vv

      - name: Run tests
        run: cargo test
