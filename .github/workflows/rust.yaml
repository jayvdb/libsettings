name: Rust
on: [ push, pull_request ]
env:
  LIBCLANG_PATH_WIN: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/Llvm/x64/bin"
jobs:
  test:
    name: Tests
    strategy:
      matrix:
        build-type: [Release]
        os:
          - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install MinGW 6.4.0
        run: |
          choco install -y --no-progress --allow-downgrade --version=6.4.0 mingw;
          choco install -y --no-progress sqlite;

      - name: Install msys2 packages
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: git base-devel
          update: true

      - name: Install MinGW Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true
          components: rustfmt, clippy

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: "test"
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true

      - name: Show conda installation info
        run: conda info

      - name: Show envvars
        shell: cmd
        run: |
          conda activate test
          set

      - name: Install pthreads
        if: matrix.os == 'windows-2019'
        run: mamba install pthreads-win32 pkg-config

      - name: Show conda installation info
        run: conda info

      - name: Show mamba list
        run: mamba list

      - name: Make cmake build directory
        working-directory: ${{ github.workspace }}
        run: cmake -E make_directory build

      - name: Dir
        run: dir C:\Miniconda\envs\test\Library\share\pkgconfig

      - name: Tree inc
        run: tree /F C:\Miniconda\envs\test\Library\include

      - name: Tree
        run: tree C:\Miniconda\envs\test\Library\

      - name: Tree lib
        run: tree /F C:\Miniconda\envs\test\Library\lib

      - name: Configure cmake (WINDOWS)
        if: matrix.os == 'windows-2019'
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: |
          cmake ../rust -DCMAKE_C_FLAGS=-I/c/Miniconda/envs/test/Library/include -DCMAKE_INSTALL_PREFIX:PATH=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DPKG_CONFIG_EXECUTABLE:FILEPATH=$CONDA_PREFIX/Library/bin/pkg-config.exe

      - name: cmake Build
        working-directory: ${{ github.workspace }}/build
        run: cmake --build . --target install --config ${{ matrix.build-type }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: cargo Build (Windows)
        env:
          LIBCLANG_PATH: ${{ env.LIBCLANG_PATH_WIN }}
          CC: gcc
          CXX: g++
          TESTENV: rust
          OS_NAME: windows
          CMAKE_GENERATOR: MinGW Makefiles
        run: cargo build -vv
        if: matrix.os == 'windows-2019'

      - name: cargo Build (Non-Windows)
        run: cargo build -vv
        if: matrix.os != 'windows-2019'

      - name: Run tests
        env:
          LIBCLANG_PATH: ${{ env.LIBCLANG_PATH_WIN }}
          CC: gcc
          CXX: g++
          TESTENV: rust
          OS_NAME: windows
          CMAKE_GENERATOR: MinGW Makefiles
        run: cargo test --target=x86_64-pc-windows-gnu
